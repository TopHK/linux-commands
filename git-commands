http://blog.csdn.net/sidely/article/details/41807381
1.link to github
ssh-keygen -t rsa -C "xxx@gmail.com"
ssh git@github.com
2.git add
git init
git add readme.txt
git commit -m "wrote a readme file"
git status
3.git revise
git diff readme.txt 
git add readme.txt
git commit -m "add distributed"
git log
git log --pretty=oneline
4.roll back to the early version
git reset --hard HEAD^ # roll back to the previous version
#上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100
git reflog
# 用来记录你的每一次命令：
5. 把文件往Git版本库里添加的时候，是分两步执行的：
第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。
6. 撤销修改
git checkout -- readme.txt #让这个文件回到最近一次git commit或gitadd时的状态。
git reset HEAD readme.txt #可以把暂存区的修改撤销掉（unstage）
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
7. delete files
git rm test.txt
8. github
git remote add origin git@github.com:michaelliao/learngit.git 
git push -u origin master # 把本地库的所有内容推送到远程库上
git push origin master # 只要本地作了提交，就可以通过命令
9. git clone git@github.com:michaelliao/gitskills.git # git clone克隆一个本地库
10. 创建与分支合并
git checkout -b dev
git checkout master # 切换分支
git merge dev # 把dev分支的工作成果合并到master分支上
git branch -d dev # 可以放心地删除dev分支
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>
git log --graph # 命令可以看到分支合并图
it log --graph --pretty=oneline --abbrev-commit # 查看分支历史





